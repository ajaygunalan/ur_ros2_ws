function [sys_ab_ax_pos_probe, sys_c_ax_pos_probe] = computeElevationStatistics(...
		sys_ab_struct, sys_c_struct, input_time_vec, varargin)
	p = inputParser();

	addParameter(p, 'ptSrcAxialLimits', [20e-3, 40e-3], @isnumeric);

	parse(p, varargin{:});

	pt_src_axial_limits = p.Results.ptSrcAxialLimits;

	robot_id_vec = find(sys_ab_struct.time >= input_time_vec(1) & sys_ab_struct.time <= input_time_vec(2));
	sys_ab_id_vec = find(...
		sys_ab_struct.pt_src_time >= input_time_vec(1) ...
		& sys_ab_struct.pt_src_time <= input_time_vec(2) ...
		& sys_ab_struct.pt_src_p42v_link1(:, 3) >= pt_src_axial_limits(1) ...
		& sys_ab_struct.pt_src_p42v_link1(:, 3) <= pt_src_axial_limits(2));
	sys_c_id_vec = find(...
		sys_c_struct.pt_src_time >= input_time_vec(1) ...
		& sys_c_struct.pt_src_time <= input_time_vec(2) ...
		& sys_c_struct.pt_src_p42v_link1(:, 3, end) >= pt_src_axial_limits(1) ...
		& sys_c_struct.pt_src_p42v_link1(:, 3, end) <= pt_src_axial_limits(2));

	% robot_pos_base = [sys_ab_struct.tf_trans(robot_id_vec, :), ones(length(robot_id_vec), 1)];
	sys_ab_ax_pos_probe = sys_ab_struct.pt_src_p42v_link1(sys_ab_id_vec, 2);
	sys_c_ax_pos_probe = sys_c_struct.pt_src_p42v_link1(sys_c_id_vec, 2);
end
